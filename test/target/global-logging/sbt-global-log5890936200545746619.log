[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 1.8.0_151)
[debug]       Load.loadUnit: plugins took 31.6441ms
[debug]       Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Victor Paul\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Victor Paul\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2404 ms
[debug]           Load.resolveProject(global-plugins) took 1.3529ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Victor Paul\.sbt\1.0\plugins, plugins: List(<none>))) took 5.3138ms
[debug] [Loading] Done in C:\Users\Victor Paul\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 6.6945ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0136ms
[debug]     Load.loadUnit(file:/C:/Users/Victor%20Paul/.sbt/1.0/plugins/, ...) took 44.6466ms
[debug]   Load.apply: load took 46.2033ms
[debug]   Load.apply: resolveProjects took 0.1153ms
[debug]   Load.apply: finalTransforms took 13.8165ms
[debug]   Load.apply: config.delegates took 1.0097ms
[debug]   Load.apply: Def.make(settings)... took 127.0358ms
[debug]   Load.apply: structureIndex took 24.9621ms
[debug]   Load.apply: mkStreams took 0.0113ms
[info] loading global plugins from C:\Users\Victor Paul\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1265.0064ms
[debug]           Load.loadUnit: plugins took 29.6337ms
[debug]           Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\Victor Paul\IdeaProjects\test\project
[debug]             Load.loadUnit: mkEval took 0.3225ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4833 ms
[info] loading settings for project test-build from idea.sbt ...
[debug]               Load.resolveProject(test-build) took 1.7867ms
[debug]             Load.loadTransitive: finalizeProject(Project(id test-build, base: C:\Users\Victor Paul\IdeaProjects\test\project, plugins: List(<none>))) took 3.7895ms
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test\project, returning: (test-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 75.7065ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.0645ms
[debug]         Load.loadUnit(file:/C:/Users/Victor%20Paul/IdeaProjects/test/project/, ...) took 108.433ms
[debug]       Load.apply: load took 111.2156ms
[debug]       Load.apply: resolveProjects took 0.0938ms
[debug]       Load.apply: finalTransforms took 5.6326ms
[debug]       Load.apply: config.delegates took 0.2884ms
[debug]       Load.apply: Def.make(settings)... took 62.2216ms
[debug]       Load.apply: structureIndex took 23.5282ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\Victor Paul\IdeaProjects\test\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 522.091ms
[debug]     Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\Victor Paul\IdeaProjects\test
[debug]       Load.loadUnit: mkEval took 0.2781ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7789 ms
[info] loading settings for project test from build.sbt ...
[debug]         Load.resolveProject(test) took 43.6439ms
[debug]       Load.loadTransitive: finalizeProject(Project(id test, base: C:\Users\Victor Paul\IdeaProjects\test, plugins: List(<none>))) took 46.16ms
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test, returning: (test)
[debug]     Load.loadUnit: loadedProjectsRaw took 123.265ms
[debug]     Load.loadUnit: cleanEvalClasses took 5.5755ms
[debug]   Load.loadUnit(file:/C:/Users/Victor%20Paul/IdeaProjects/test/, ...) took 651.4773ms
[debug] Load.apply: load took 652.9578ms
[debug] Load.apply: resolveProjects took 0.107ms
[debug] Load.apply: finalTransforms took 21.9326ms
[debug] Load.apply: config.delegates took 0.3133ms
[debug] Load.apply: Def.make(settings)... took 86.7053ms
[debug] Load.apply: structureIndex took 21.1104ms
[debug] Load.apply: mkStreams took 0.0027ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to test (in build file:/C:/Users/Victor%20Paul/IdeaProjects/test/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
