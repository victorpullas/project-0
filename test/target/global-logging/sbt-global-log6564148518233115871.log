[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 1.8.0_151)
[debug]       Load.loadUnit: plugins took 89.2094ms
[debug]       Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\Victor Paul\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Victor Paul\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.8495 ms
[debug]           Load.resolveProject(global-plugins) took 1.5052ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Victor Paul\.sbt\1.0\plugins, plugins: List(<none>))) took 7.0636ms
[debug] [Loading] Done in C:\Users\Victor Paul\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 9.4008ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0099ms
[debug]     Load.loadUnit(file:/C:/Users/Victor%20Paul/.sbt/1.0/plugins/, ...) took 99.8576ms
[debug]   Load.apply: load took 101.4849ms
[debug]   Load.apply: resolveProjects took 0.1075ms
[debug]   Load.apply: finalTransforms took 7.3137ms
[debug]   Load.apply: config.delegates took 0.269ms
[debug]   Load.apply: Def.make(settings)... took 75.5675ms
[debug]   Load.apply: structureIndex took 82.4062ms
[debug]   Load.apply: mkStreams took 0.0039ms
[info] loading global plugins from C:\Users\Victor Paul\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 966.4887ms
[debug]           Load.loadUnit: plugins took 39.4553ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\Victor Paul\IdeaProjects\test\project
[debug]             Load.loadUnit: mkEval took 0.4167ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5993 ms
[info] loading settings for project test-build from idea7.sbt ...
[debug]               Load.resolveProject(test-build) took 15.182ms
[debug]             Load.loadTransitive: finalizeProject(Project(id test-build, base: C:\Users\Victor Paul\IdeaProjects\test\project, plugins: List(<none>))) took 17.3838ms
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test\project, returning: (test-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 51.7695ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.5805ms
[debug]         Load.loadUnit(file:/C:/Users/Victor%20Paul/IdeaProjects/test/project/, ...) took 94.0723ms
[debug]       Load.apply: load took 95.9131ms
[debug]       Load.apply: resolveProjects took 0.1407ms
[debug]       Load.apply: finalTransforms took 7.3006ms
[debug]       Load.apply: config.delegates took 0.3334ms
[debug]       Load.apply: Def.make(settings)... took 78.0039ms
[debug]       Load.apply: structureIndex took 26.0041ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Users\Victor Paul\IdeaProjects\test\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 557.3991ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\Victor Paul\IdeaProjects\test
[debug]       Load.loadUnit: mkEval took 0.4227ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3392 ms
[info] loading settings for project test from build.sbt ...
[debug]         Load.resolveProject(test) took 37.8571ms
[debug]       Load.loadTransitive: finalizeProject(Project(id test, base: C:\Users\Victor Paul\IdeaProjects\test, plugins: List(<none>))) took 40.9656ms
[debug] [Loading] Done in C:\Users\Victor Paul\IdeaProjects\test, returning: (test)
[debug]     Load.loadUnit: loadedProjectsRaw took 133.7401ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.0861ms
[debug]   Load.loadUnit(file:/C:/Users/Victor%20Paul/IdeaProjects/test/, ...) took 697.7359ms
[debug] Load.apply: load took 699.1933ms
[debug] Load.apply: resolveProjects took 0.0745ms
[debug] Load.apply: finalTransforms took 20.2174ms
[debug] Load.apply: config.delegates took 0.3203ms
[debug] Load.apply: Def.make(settings)... took 104.8359ms
[debug] Load.apply: structureIndex took 24.0453ms
[debug] Load.apply: mkStreams took 0.003ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to test (in build file:/C:/Users/Victor%20Paul/IdeaProjects/test/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
